datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  CarPool  CarPool[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Participant {
  id   String @id @default(cuid())
  name String

  carpoolId      String
  CarPool        CarPool          @relation(fields: [carpoolId], references: [id])
  CarParticipant CarParticipant[]
}

model Car {
  id    String @id @default(cuid())
  name  String
  seats Int
  owner String

  carPoolId      String
  CarPool        CarPool          @relation(fields: [carPoolId], references: [id])
  CarParticipant CarParticipant[]
}

model CarParticipant {
  id            String      @id @default(cuid())
  seat          Int
  carId         String
  car           Car         @relation(fields: [carId], references: [id])
  participantId String
  participant   Participant @relation(fields: [participantId], references: [id])
}

model CarPool {
  id          String        @id @default(cuid())
  name        String?
  Participant Participant[]
  organiserId String
  organiser   User          @relation(fields: [organiserId], references: [id])
  Cars         Car[]
}

// model CarMatch {
//   id                   String                 @id @default(cuid())
//   participants         Participant[]
//   organiser            User                   @relation(fields: [userId], references: [id])
//   car                  Car                    @relation(fields: [carId], references: [id])
//   userId               String
//   carId                String
//   CarMatch_Participant CarMatch_Participant[]
// }

// model CarMatch_Participant {
//   id            String      @id @default(cuid())
//   carMatchId    String
//   carMatch      CarMatch    @relation(fields: [carMatchId], references: [id])
//   participantId String
//   participant   Participant @relation(fields: [participantId], references: [id])
// }
